{
	"info": {
		"_postman_id": "090bb5a9-4a89-4747-abd8-2ec48899de75",
		"name": "Rick and Morty API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21211171"
	},
	"item": [
		{
			"name": "General",
			"item": [
				{
					"name": "All the characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and JSON body\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Check if find the character Rick Sanchez from earth C-137\", function (){\r",
									"   var jsonData = pm.response.json()\r",
									"   character = jsonData.results[0];\r",
									"   earth = jsonData.results[0].origin;\r",
									"   pm.expect(character.name).to.eql(\"Rick Sanchez\");\r",
									"   pm.expect(earth.name).to.eql(\"Earth (C-137)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/character",
							"host": [
								"{{URL}}"
							],
							"path": [
								"character"
							]
						}
					},
					"response": []
				},
				{
					"name": "Characters per page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and JSON body\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Check if find the character Worldender\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var character = jsonData.results.find(x => x.id == 382)\r",
									"    pm.expect(character.name).to.eql(\"Worldender\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/character/?page=20",
							"host": [
								"{{URL}}"
							],
							"path": [
								"character",
								""
							],
							"query": [
								{
									"key": "page",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single character",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and JSON body\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Check if find the character Jerry Smith is a Male and still Alive\", function (){\r",
									"    var character = pm.response.json();\r",
									"    pm.expect(character.name).to.eql(\"Jerry Smith\");\r",
									"    pm.expect(character.status).to.eql(\"Alive\");\r",
									"    pm.expect(character.gender).to.eql(\"Male\")\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/character/{{IdCharacter}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"character",
								"{{IdCharacter}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Multiple search ID  with error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and JSON body\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Check if it body EMPTY\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.empty;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/character/827,828,829",
							"host": [
								"{{URL}}"
							],
							"path": [
								"character",
								"827,828,829"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}